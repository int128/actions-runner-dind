name: build

on:
  pull_request:
    paths:
      - .github/workflows/build.yaml
      - Dockerfile
      - entrypoint.sh
  push:
    branches:
      - main

jobs:
  image:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ghcr.io/${{ github.repository }}
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v3
        id: build
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64

  e2e-test-controller:
    needs: image
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: e2e-test
    steps:
      - uses: actions/checkout@v3
      - uses: aquaproj/aqua-installer@v2.1.1
        with:
          aqua_version: v2.7.1
          working_directory: e2e-test
      - run: make cluster
      - run: make deploy
        env:
          RUNNER_IMAGE_URI: ghcr.io/${{ github.repository }}@${{ needs.image.outputs.digest }}
          APP_ID: ${{ secrets.APP_ID }}
          APP_INSTALLATION_ID: ${{ secrets.APP_INSTALLATION_ID }}
          APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}
      - run: make wait-for-job
      - run: sleep 5
      - run: make logs
        if: always()

  e2e-test-runner:
    needs: image
    runs-on: arc-runner-set
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - run: docker version
      # build Go application
      - run: docker build -t fixture -f e2e-test/fixture.dockerfile e2e-test
      - run: docker run --rm fixture
      # mount a volume
      - run: docker run -v "$PWD:/workspace" --rm debian ls -l /workspace/README.md
